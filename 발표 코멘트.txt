안녕하세요 자바 프로젝트 발표를 진행하게 된 
팀 SoomCo의 신형진입니다


우선 저희 PPT 발표 순서입니다.

팀 소개부터 시연 및 느낌점 까지이며
6번 주요코드 설명부분에서 저화 배성민 팀원이 파트를 나누어 설명을 진행하게 될것같습니다.


저희 팀은 4인 1조로 구성되있으며 프로젝트 진행 시 최대한 의견을 맞춰가며 진행했습니다


저희 팀은 Swing을 이용해서 웹을 최대한 유사하게 표현하고자 했습니다.
그래서 실제 웹사이트를 모작하는 것으로 가닥을 잡아 프로젝트를 진행했습니다.

저희 팀이 모방한 사이트는 '숨고'라는 웹 사이트입니다

숨은고수의 약어로 아시는 분들이 많이 있을텐데, 웹에서 제공하는 핵심 서비스는 
웹에서 미리 지정해둔 여러 분야에 따라 해당 분야를 배우고싶은 회원이
본인소개와 배우고싶은 내용, 배울수 있는 지역 등을 작성하여 제출하면 시간내에 전문가가 
본인의 이력사항을 회원에게 전송하고 회원의 선택에따라 고수가 매칭되어 서로 계약하게 되는 형태입니다.

간단하게 숨고 웹사이트의 흐름을 영상으로 보겠습니다.


이러한 전반적인 큰 흐름을 저희가 Swing에 담아보았습니다

바로 숨코! 숨은코딩 입니다.
저희는 회원과 고수를 초보와 고수로 구분하였습니다.

메인 화면입니다. 실제 웹 페이지에 있는 여러 카테고리중 

메인 분야별 아이콘과, 로그인이 되어있다면 로그인 한 회원의 지역정보를 얻어
그 지역에 해당하는 고수만 보여주는 고수 카드, 고수로 로그인시 고수의 분야에 해당하는 초보만 보여주는 초보카드,

실제 XML파일을 파싱하여 숨고 공식 블로그에 게시되는 내용을 얻어오는 동적 데이터 파싱을 이용한 매거진,

메인 분야의 서브 분야 페이지, 
로그인, 
회원가입 등 여러 화면들을 제작하였습니다.

실제 프로젝트를 진행하면서 가장 중요하다고 생각되는 기능들을 4가지로 추려보았습니다

1. 고수 List를 얻어와 카드를 생성하는 부분
   - 이 부분은 전제조건이 초보로 로그인 했을경우이며, 전체 고수 리스트를 랜덤하게
     셔플해주어 로그인 한 회원의 지역에 해당하는 고수만을 추출해서 카드 형태로 생성하는
     기능입니다. 리스트에서 정보를 얻어와서 카드를 생성하는 로직이 이곳 뿐만 아니라
     매거진 이미지와 URL을 통해 카드로 생성하는곳과 메인분야와 서브분야 카드생성 등
     여러 곳에서 많이 활용된 내용이기에 중요하다고 생각하였습니다.

2. 매거진 크롤링
   - 매거진은 실제 숨고 공식 블로그의 홈을 페이지 소스보기를 통해 XML 파일을 얻었습니다.
    XML 파일 내에서 각각의 게시물마다의 Title과 URL을 얻어와 리스트에 저장하여 
    매거진 카드 생성에 사용하였습니다. 다만 아쉬운 점이라면 이미지는 XML 파싱으로도
    얻을수가 없어서 정적으로 배열에 넣었다는 점입니다.

3. 디자인
   - 디자인은 폰트부터 마우스Hover 이벤트까지 꽤나 세심히 신경썻습니다.

4. 채팅
   - 채팅은 원래대로라면 실시간 채팅이 가능하게 구현하고 싶었는데 
     상식적으로 생각해봐도 회원으로 로그인해서 채팅한 내용이 같은 컴퓨터로 회원 채팅창을
     본다는 점이 매끄럽지 않은 진행방향이라 생각되어 쪽지와 같은 느낌으로 구현했습니다.

     ---  (대충 친구와 1:1 카톡방을 만들었는데 내가 친 내용을 내 화면으로 보는것과 동시에
            친구 ID로 2개의 클라이언트를 실행하여 보여진다는게 어색하다는 말)  ---

그래서 저희 프로젝트의 최종 목표는 GUI를 이용해 최대한 유사하게 동적 웹페이지를 구현하는 것이였습니다.

전체적인 아쉬운점은 현재는 고수카드를 클릭했을 때 아무런 액션이 없다는 점입니다.
상세정보를 볼 수 있는 페이지를 만들고 싶었지만 시간상 구현하지 않았습니다.

또 마이페이지를 통해 프로필 사진 등 개인정보 수정 등을 구현하고 싶었지만 마찬가지로 시간상 생략하였습니다.


일정은 3일차에 주제선정 및 간단한 DB설계를 진행하였고 2주차엔 큰 레이아웃 구현 및
DB생성, 코딩에 집중하였습니다. 에러 및 오류는 생기는 날마나 해결하였습니다.


산출물로 우선 ERD입니다.
저희 프로젝트 DB는 4개의 DB로 구성되어 있습니다.
멤버 DB의 M_ID가 CHAT DB의 외래키로 작용하고, TOP DB의 TOP_ID가 SUB DB의 외래키로
작용합니다.

멤버 DB는 총 16개의 컬럼으로 구성되있습니다. 
핵심은 M_ID, 지역을 나타내는LOCATION, 초보인지 고수인지 판별하는 POSITION,
견적서 제출을 통한 채팅방 생성여부를 판단하는 STATUS
매칭(고용)후 DeadLine을 현재날짜와 판단하기 위한 DEADLINE
매칭 여부를 판단하는 M_MATCHING 입니다.

CHAT DB는 4개 컬럼인 전송자ID, 시퀀스ID, 내용, 수신자ID입니다.
채팅 내용은 이렇게 나오게 됩니다.

SUB DB는 4개 컬럼인 SUB ID, TOP ID, SUB NAME, SUB_IMG 입니다.
실제 SUB DB에는 이렇게 총 54개의 데이터가 들어있습니다.

TOP DB는 2개 컬럼인 TOP ID, TOP NAME 이며, 실제로 8개의 데이터가 들어있습니다.


주요 코드가 굉장히 중요한 내용들이 많은데.. 우선 전체적인 클래스 관계도를 보면
중앙의 SoomCoMain에서부터 시작하여 클래스 간 점선은 서순이라고 보시면 됩니다
예를들어 ChatMain의 점선이 SoomCoMain으로 이어졌다는 것은,
SoomCoMain 이후에 액션에 따라 ChatMain이 실행되거나 객체를 생성하거나
값을 리턴받아 사용한다는 의미입니다.

실선의 색채움이 없는 화살표는 상속관계임을 의미합니다.
이렇게만 설명하면 너무 어렵고 복잡할 것 같아서 좀 더 간단하게 패키지를 구분지었습니다.


카드 패키지는 메인화면의 매거진, 고수카드, 서브분야 카드 등을 생성할 때 필요한 패키지

카테고리는 각 서브 분야별 필요한 페이지와 각 페이지별 공통 변수 및 기능을 갖는 CategorySame 등이 있습니다.

채팅은 채팅관련 기능을 구현하는 패키지

견적서는 서브 분야 클릭시 작성하게되는 견적서 관련 기능 구현 패키지

home은 실행시 첫화면으로 보여지는 페이지, SoomCoMain 전체 JFrame

Member 패키지는 로그인부터 회원가입까지의 기능을 구현하는 패키지

DB는 DB 접속 및 연결해제 관련 기능 패키지

HoverButton은 버튼 아이콘 지정하고 불투명도 이벤트 기능을 담당하는 패키지

Util는 imageIcon과 img 관련 유틸 기능 패키지입니다.


서브분야는 거의 동일하여 하나만 소개드리자면
해당 서브 분야 이미지를 클릭하면 로그인 한 대상이 초보이면 견적폼을 띄워주고
고수이면 팝업창을 띄우게 됩니다.

CategoryCard는 서브분야에서 넘겨준 top의 name, 자신의 img, 자신의 name을 인수로 받아 CategorySame으로 전달하며

서브분야별 공통변수 및 기능을 갖는 CategorySame에서 카드를 생성하여 부착하게 되는데
각 서브 분야는 갯수가 서로 상이하기 때문에 이를 삼항연산자로 계산하여 부착되는 패널의 Height를 작거나 크게 설정하게됩니다

Home에서는 XML 파싱을 Jsoup 라이브러리를 사용하여 파싱했고
indexOf 메소드로 찾는 내용을 매개변수로 받고 끝나는 점도 매개변수로 받습니다
여기서 indexOf의 매개변수가 같은것은 실제 XML에서
<link>태그가 있는데 해당 내용이 시작이 https 이며 다음 link태그에서도 https가 시작점이기에
같은 내용으로 추출해도 문제가 없었습니다.
만약 문서를 파싱하는데 해당 내용을 찾지 못한다면 -1을 반환하기에 이를 통해 종료하게됩니다

이렇게 URL을 파싱해서 얻어오고, Title로 마찬가지로 파싱하게됩니다.
그렇게 얻어온 URL을 브라우저로 띄우게 됩니다.

HoverPanel은 고수 카드와 매거진 패널에 마우스Hover 이벤트를 주기위한 클래스입니다
기본 불투명도를 82%로 설정하여 마우스가 올라가면 천천히 100%까지 상승하고
마우스가 내려가면 다시 82%까지 천천히 하락합니다

CardItem은 생성자를 오버로딩하여 고수카드, 매거진카드, 서브분야 카드를 생성하는데
이중 매거진카드 생성시 Title의 길이가 서로 다르기 때문에 동적으로 Label 사이즈를
지정해주려 하였지만 패널 사이즈를 넘어가 글자가 가려져서 로직으로
17글자 마다 끊어서 새로운 라벨을 부착하는 방식으로 진행했습니다

이어서 DB파트는 배성민 팀원이 설명하도록 하겠습니다.